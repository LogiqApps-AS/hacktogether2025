name: Build and Deploy Dataverse Package

on:
  release:
    types: [published]
  push:
    branches: [main]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [main]

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  buildType: Release
  projectfile: src/package
  msbuildtarget: src/package/src
  npm_project_dir: ./solutions/LogiqAppsPDP_PCF

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Power Platform Tools
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Set Build Version
        id: set_version
        run: |
          $date = Get-Date -Format "yyyy.MM.dd"
          $buildNumber = $env:GITHUB_RUN_NUMBER
          $version = "$date.$buildNumber"
          echo "##[set-output name=version;]$version"
          echo "Build version set to: $version"
        shell: pwsh

      - name: Update Solution Version
        run: |
          $version = "${{ steps.set_version.outputs.version }}"
          $xmlFiles = Get-ChildItem -Path ./solutions -Recurse -Filter Solution.xml
          foreach ($xmlFile in $xmlFiles) {
            [xml]$xml = Get-Content $xmlFile.FullName
            $xml.ImportExportXml.SolutionManifest.Version = $version
            $xml.Save($xmlFile.FullName)
          }
        shell: pwsh

      - name: Pack All Solutions As Managed
        run: |
          $solutions = Get-ChildItem -Path ./solutions -Directory
          foreach ($solution in $solutions) {
            Write-Host "Packing solution: $($solution.Name)"
            & "pac" solution pack --zipfile "./build/$($solution.Name)_${{ steps.set_version.outputs.version }}.zip" --folder "$($solution.FullName)" --packagetype Managed
          }
        shell: pwsh

      - name: Pack All Solutions As Unmanaged
        run: |
          $solutions = Get-ChildItem -Path ./solutions -Directory
          foreach ($solution in $solutions) {
            Write-Host "Packing solution: $($solution.Name)"
            & "pac" solution pack --zipfile "./build/$($solution.Name)_${{ steps.set_version.outputs.version }}.zip" --folder "$($solution.FullName)" --packagetype Unmanaged
          }
        shell: pwsh

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packaged-solutions
          path: ./build/*.zip
          overwrite: true
